version: '3.8'

services:
  api:
    build: .
    container_name: bank-converter-api
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - SECRET_KEY=${SECRET_KEY:-change-this-secret-key}
      - MAX_FILE_SIZE_MB=50
      - UPLOAD_RETENTION_HOURS=1
    volumes:
      - uploads_data:/app/uploads
      - converted_data:/app/converted
      - logs_data:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - redis
    networks:
      - bank_converter_network

  redis:
    image: redis:7-alpine
    container_name: bank-converter-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - bank_converter_network
    command: redis-server --appendonly yes

  nginx:
    image: nginx:alpine
    container_name: bank-converter-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - api
    restart: unless-stopped
    networks:
      - bank_converter_network

  # Optional: Database for job persistence
  postgres:
    image: postgres:15-alpine
    container_name: bank-converter-db
    environment:
      - POSTGRES_DB=bank_converter
      - POSTGRES_USER=bank_converter
      - POSTGRES_PASSWORD=${DB_PASSWORD:-change-this-password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - bank_converter_network
    profiles:
      - with-db

  # Optional: Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: bank-converter-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - bank_converter_network
    profiles:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: bank-converter-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana_data:/var/lib/grafana
    restart: unless-stopped
    networks:
      - bank_converter_network
    profiles:
      - monitoring

volumes:
  uploads_data:
    driver: local
  converted_data:
    driver: local
  logs_data:
    driver: local
  redis_data:
    driver: local
  postgres_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  nginx_logs:
    driver: local

networks:
  bank_converter_network:
    driver: bridge